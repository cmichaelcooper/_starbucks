@using solutions.starbucks.Model
@using System.Web.Mvc.Html
@using solutions.starbucks.web.Controllers
@using solutions.starbucks.Model
@using solutions.starbucks.Model.Pocos
@using Umbraco.Web
@model BagViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #s2id_Order_AccountSiteNumber {
        min-width: 320px;
    }

    #bag .row .col.col4 input.inactive, #my-bag .row .col.col4 input.inactive {
        border: none;
        text-align: left;
        padding-left: 2px;
    }

    .edit-qty-btn, .save-qty-btn, .cancel-qty-btn {
        float: right;
    }

    .save-qty-btn {
        padding: 1px 6px;
    }
</style>
 
<div class="bag">
    <section>
        <div class="inner-container">
            <div class="clear">
                <h1>My Bag</h1>
                <a class="btn btn-white" href="/products">CONTINUE SHOPPING</a>
            </div>

            <div class="bag-contents">
                <form id="BagForm" data-action="@Url.Action("SaveOrder", "BagSurface")">

                    <div class="h1">Review Order</div>

                    @if ((Model.CustomerSites != null && Model.CustomerSites.Count > 1))
                    {
                        <div class="bag-shopping-for">
                            <span class="x28">Shopping for:</span>
                            @Html.DropDownListFor(m => m.Order.AccountSiteNumber, new SelectList(Model.CustomerSites, "AccountSiteNumber", "DisplayName", ""), null, new { required = "required", @class = "dashboard-acct-select" })
                        </div>
                    }
                    else
                    {
                        @Html.HiddenFor(m => m.Order.AccountSiteNumber)
                    }

                    <div class="bag-empty @(Model.BagIsEmpty ? "" : "hide")"><strong>There’s nothing in your bag.</strong></div>
                    @Html.HiddenFor(model => model.Order.OrderID)

                    @for (int i = 0; i < Model.Order.OrderItems.Count; i++)
                    {
                        OrderItems orderItem = Model.Order.OrderItems[i];
                        <div class="row order-item" data-deleteaction="@Url.Action("DeleteOrderItem", "BagSurface", new { orderID = orderItem.OrderID, sku = orderItem.SKUNumber })">
                            <div class="col col1">
                                <img src="@(orderItem.ThumbImgURL)" />
                            </div>
                            @if (!orderItem.IsMarketing)
                            {
                                <div class="col col2">
                                    <h3><a class="dotted-link" href="@(orderItem.ProductURL)">@orderItem.Name »</a></h3>
                                </div>
                            }
                            else
                            {
                                <div class="col col2">
                                    <h3>@orderItem.DisplayName</h3>
                                </div>
                            }
                            <div class="col col3">
                                @if (!string.IsNullOrEmpty(orderItem.Size))
                                {
                                    <div><strong>SIZE</strong> @(orderItem.Size)</div>
                                }
                                <div>
                                    <strong>SKU</strong>
                                    @(orderItem.SKUNumber)
                                    @Html.HiddenFor(x => x.Order.OrderItems[i].SKUNumber)
                                </div>
                                @if (!string.IsNullOrEmpty(orderItem.UOM))
                                {
                                    <div><strong>PACK</strong> @(orderItem.UOM)</div>
                                }
                            </div>
                            <div class="col col4 bag-qty">
                                <strong>QTY</strong>
                                @Html.TextBoxFor(x => x.Order.OrderItems[i].Quantity, new { @type = "number", @class = "inactive qty-field" })
                                <a class="edit-nickname-btn edit-qty-btn" name="qty-@i"><span class="edit-icon"></span>Edit</a>
                                <i class="fa fa-times cancel-nickname-btn cancel-qty-btn"></i>
                                <a class="save-nickname-btn save-qty-btn" name="qty-@i"><i class="fa fa-check"></i></a>
                            </div>
                            <a class="dotted-link tr-dotted-link delete-orderitem">Remove</a>­­
                        </div>                        
                    }
                    @if (!Model.BagIsEmpty)
                    {
                        <div class="grouping purchase-order-no">
                            <label><span class="field-label">Purchase Order Number</span></label>
                            @Html.TextBoxFor(model => model.Order.PurchaseOrderNumber, new { maxlength = 50, @class = "form-control", placeholder = "Purchase Order Number" })
                        </div>
                    }
                </form>
            </div>
            @if (!Model.BagIsEmpty)
            {
                <button id="SubmitOrder" class="btn btn-green" data-action="@(Url.Action("SubmitOrder", "BagSurface"))">SUBMIT ORDER</button>
            }
            <a class="btn btn-white" href="/products">CONTINUE SHOPPING</a>
            <div class="clear"></div>
        </div>
    </section>
</div>
@Html.Partial("~/Views/Partials/_LoggedInFooter.cshtml")

<script>$(document).ready(function () { SBS.Bag(); });</script>