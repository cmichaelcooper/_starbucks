@using solutions.starbucks.Model
@using System.Web.Mvc.Html
@using solutions.starbucks.web.Controllers
@using solutions.starbucks.Model
@using solutions.starbucks.Model.Pocos
@using Umbraco.Web
@model ProgramModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    int i = 0;
    int j = 0;
    int k = 0;
    int l = 0;
    var menuItems = Model.TileContents;
    var isArchived = Model.ArchiveProgram;
    var currentProgramURL = Model.CurrentProgramURL;
    
}



<section id="content">
    <section class="wrapper"  style="background-image: url(@(Model.ProgramBackground)); background-size: cover; background-position: center top;">
        <div class="help-tile">
            @if (isArchived)
            {
                <h3><span class="help-title">Looking for our current program?</span> <a href="@currentProgramURL">See Now</a></h3>
            }
            else
            {
                <h3><span class="help-title">How do I order?</span> <a id="help-launcher" href="#">Take a Tour</a></h3>
            }
        </div>
        <div class="program-tiles">

            @foreach (var menuItem in menuItems)
            {
                var recipeToggle = (menuItem.IsThisARecipeTile) ? "recipe-toggle" : String.Empty;
                var recipeBtn = (menuItem.IsThisARecipeTile) ? "recipe-btn" : String.Empty;
                var btnText = (menuItem.IsThisARecipeTile) ? "Add to Menu" : "See Now";
                var sectionLink = (menuItem.Title.Replace(" ", "-").Replace("è", "e").ToLower()) + "-section";
                var btnHref = (menuItem.IsThisARecipeTile) ? "#" + sectionLink : Model.ProgramProductsLink;

                <div id="@(menuItem.Title.Replace(" ", "-").Replace("è", "e").ToLower())" class="@(recipeToggle) program-banner w@(menuItem.Width)h@(menuItem.Height)">
                    @if (isArchived)
                    {

                    }
                    else
                    {
                    <div class="tile-elements">
                        <!-- <h2>@menuItem.Title</h2> -->
                            @if (btnText == "See Now")
                            {
                                <a id="joyride-addbtn@(i)" class="program-tile-btn @(recipeBtn) progSubmit" href="@(btnHref)">@(btnText)</a>
                            }
                            else
                            {
                                <a id="joyride-addbtn@(i)" class="program-tile-btn @(recipeBtn)" href=@(btnHref)>@(btnText)</a>
                            }
                    </div>
                    }
                    @if (!String.IsNullOrEmpty(menuItem.DesktopTileBanner))
                    {
                        <img src="@menuItem.DesktopTileBanner" class="img-large"/>
                    }
                    @if (!String.IsNullOrEmpty(menuItem.BigMobileTileBanner))
                    {
                        <img src="@menuItem.BigMobileTileBanner" class="img-big"/>
                    }
                    @if (!String.IsNullOrEmpty(menuItem.SmallMobileTileBanner))
                    {
                        <img src="@menuItem.SmallMobileTileBanner" class="img-small"/>
                    }
                </div>
                    i++;
            }

            <div class="clear"></div>
        </div>
        @using (Html.BeginUmbracoForm<ProgramOrderSurfaceController>("ProcessOrder", null, new { id = "programForm" }))
        {
            
            <div class="menu-wrapper">
                <a name="your-menu"></a>

                <div class="your-menu">
                    @if (isArchived)
                    {
                    }
                    else
                    {
                    <div class="menu-gray">
                        <h3 class="programs-section-your-menu-title">Your Menu</h3>
                        <p>
                            <a id="joyride-download-recipes" class="inline-link" href="@(Model.RecipeCardUpload)" data-role="none" target="_blank">Download all recipe cards &raquo;</a>
                        </p>
                    </div>
                                        
                    <div class="empty-menu">
                        <p>
                            Build your menu by adding recipes above.<br />
                            Or skip this step and go <a class="inline-link" href="@Model.ProgramProductsLink" data-role="none">directly to individual products</a>.
                        </p>
                    </div>
                    }

                    @foreach (var menu in Model.TileContents)
                    {
                        var parentValueId = menu.Title.ToLower().Replace(" ", "-").Replace("è", "e");
                        var parentName = menu.Title.Replace(" ", "_");

                        <a name="@(parentValueId)-section"></a>
                        <section id="menu-@(parentValueId)" class="recipe-group recipe-group-@(j)" data-group="@(parentValueId)">

                            <h3 class="group-title">@menu.RecipeGroupTitle</h3>

                            @*<div class="your-menu-recipes">*@
                            @foreach (var recipe in Model.RecipeTiles.Where(r => r.ParentValue == menu.Title))
                            {
                                var recipeValueId = recipe.RecipeID.ToLower().Replace(" ", "-").Replace("è", "e");

                                <article id="recipe-@(recipeValueId)-@(parentValueId)" class="recipe @(recipe.RecipeID.ToLower().Replace(" ", "-"))" data-group="@parentValueId" data-name="@(recipeValueId)-@(parentValueId)">
                                    <div class="recipe-inner">
                                        <span id="joyride-remover@(j)" class="remover" data-group="@parentValueId"><span class="remover-text">Remove</span> <img class="menu-closer-icon" src="/img/svg/fallback/recipe-remover.png"></span>
                                        <div class="recipe-column img">
                                            <div class="recipe-image @(recipeValueId)" data-name="@recipeValueId">
                                                @if (!String.IsNullOrEmpty(recipe.RecipeImage))
                                                {
                                                    <img src="@recipe.RecipeImage"  class="img-large" alt="@recipe.RecipeID" />
                                                    <img src="@recipe.RecipeImage"  class="img-big" alt="@recipe.RecipeID" />
                                                    <img src="@recipe.RecipeImage"  class="img-small" alt="@recipe.RecipeID" />
                                                }
                                            </div>
                                            <div class="title">
                                                <span>@recipe.RecipeName</span>
                                            </div>
                                        </div>
                                        <div class="recipe-column details">
                                            <div class="title">
                                                <span>@recipe.RecipeName</span>
                                            </div>
                                            <div class="recipe-slider">
                                                <p class="how-many">How many 16 oz. drinks do you expect to serve weekly?</p>
                                                <div id="joyride-slider@(j)" class="slider-wrapper">
                                                    <span class="slider-nil">0</span>
                                                    <span class="slider-max">1000</span>
                                                    <label class="range-label" for="slider-@(recipeValueId)-@(parentValueId)"></label>
                                                    <input class="recipe-qty" type="number" name="slider-@(recipeValueId)-@(parentValueId)" id="slider-@(recipeValueId)-@(parentValueId)" value="0" min="0" max="1000" step="50" />
                                                </div>
                                            </div>
                                            @if (!String.IsNullOrEmpty(menu.RecipeGroupHelp.ToString()))
                                            {
                                            <div class="help-link">
                                                <a class="link-text" href="#" data-reveal-id="recipe-help-modal-@(parentValueId)" data-role="none">Need help? &raquo;</a>
                                            </div>
                                            }
                                            <ul class="recipe-ingredient-list">
                                                @foreach (var ingredient in recipe.Ingredients.GroupBy(p => new { p.IngredientName }).Select(g => g.First()))
                                                {
                                                    var ingredientName = ingredient.IngredientName.Replace(" ", "-").Replace("®", "").Replace("é", "e").ToLower();
                                                    <li data-name="@ingredientName.Replace(".", "")" class="recipe-ingredient">
                                                        <span class="prod-name" data-name="@ingredientName" data-yield="@ingredient.BeverageYield">@ingredient.IngredientName</span>
                                                        <span class="prod-qty">
                                                            <input id="joyride-slider-output@(k)" class="qty-input" type="number" min="0" pattern="\d+" value="" name="sku-val" maxlength="2" data-role="none" />    
                                                            @Html.Hidden("SKU-" + ingredient.IngredientSKU, "0", new { @class = "qty-input-val" })
                                                            case(s)</span>
                                                    </li>
                                                    k++;
                                                }

                                            </ul>
                                        </div>
                                    </div>
                                </article> 
                            }
                            @if (Model.MarketingTiles != null)
                            {
                                <article id="marketing-@(parentValueId)" class="marketing @(parentValueId)" data-group="@(parentValueId)">
                                    <div class="marketing-inner">
                                        @foreach (var marketing in Model.MarketingTiles.Where(p => p.ParentValue == menu.Title))
                                        {
                                            <div class="marketing-column img mkt-img-@(l)">
                                                <div class="marketing-image @parentValueId" data-name="@parentValueId">
                                                    @if (!String.IsNullOrEmpty(marketing.MarketingImage))
                                                    {
                                                        <img src="@marketing.MarketingImage"  class="img-large" alt="" />
                                                        <img src="@marketing.MarketingImage"  class="img-big" alt="" />
                                                        <img src="@marketing.MarketingImage"  class="img-small" alt="" />
                                                    }
                                                </div>
                                                <div class="title">
                                                    <span>@marketing.Title</span>
                                                </div>
                                            </div>
                                            <div id="joyride-marketing@(j)" class="marketing-column details mkt-dtl-@(l)">
                                                <div class="title">
                                                    <span>@marketing.Title</span>
                                                </div>
                                                <div>
                                                    <ul class="marketing-list">
                                                        @foreach (var marketingItem in marketing.ProgramMarketingItems)
                                                        {
                                                            var marketingSKU = marketingItem.SKU;
                                                            //var marketingName = marketingItem.Name.Replace("\"", "").Replace(" ", "_").Replace(".", "").Replace("®","");
                                                            var marketingName = marketingItem.Name;
                                                            var marketingMaxQty = Convert.ToInt32(marketingItem.MaxQuantity);
                                                            var menuBrand = "";
                                                            if (menu.BrandSelect.ToLower() == "sbc")
                                                            {
                                                                menuBrand = "SBC_";
                                                            }
                                                            <li>
                                                                @*MARLIN-4*@
                                                                @* <input id="@(marketingName)_@(parentName)" name="@(menuBrand)@(marketingName)_@(marketingTitleVal)" type="checkbox" value="true" data-role="none" />*@

                                                                <label for="@(marketingName)_@(parentName)">
                                                                    <span class="title prod-name">@marketingName</span>
                                                                    <select id="MKT-@(marketingSKU)" name="MKT-@(marketingSKU)" data-role="none" class="mkt-select">
                                                                        @for (int qtyCounter = 0; qtyCounter < marketingMaxQty + 1; qtyCounter++)
                                                                        {
                                                                            <option value="@(qtyCounter)">@(qtyCounter)</option>
                                                                        }
                                                                    </select>
                                                                </label>
                                                                
                                                                @if (marketingName.Contains("Poster"))
                                                                {
                                                                 <p class="legal">Note: Poster foldable to 22" x 26"</p>
                                                                }
                                                            </li>
                                                        }
                                                    </ul>
                                                </div>
                                                
                                            </div>
                                            
                 
                                                        l++;
                                        }
                                    </div>
                                    
                                </article>
                            }
                            
                            <div id="recipe-help-modal-@(parentValueId)" class="reveal-modal recipe-help-modal" data-reveal>
                                <a class="close-reveal-modal">&#215;</a>
                                @menu.RecipeGroupHelp
                            </div>
@*</div>*@
                        </section>
                    
                            j++;
                    }

                    @if (isArchived)
                    {
                    }
                    else
                    {

                    <section class="module-expander">
                        <div id="joyride-add-more" class="expander">Individual Beverages</div>
                        <div class="collapser" data-role="none">
                            <ul class="additional-recipes">
                                @foreach (var menu in Model.TileContents)
                                {
                                    var parentValueId = menu.Title.ToLower().Replace(" ", "-").Replace("è", "e");
                                    var parentName = menu.Title.Replace(" ", "_");

                                    foreach (var recipe in Model.RecipeTiles.Where(r => r.ParentValue == menu.Title))
                                    {
                                        var recipeValueId = recipe.RecipeID.ToLower().Replace(" ", "-").Replace("è", "e");
                                    
                                    <li data-group="@(parentValueId)" data-name="@(recipeValueId)-@(parentValueId)">@recipe.RecipeID.Replace("-", " ")</li>
                                    }
                                }
                            </ul>
                        </div>
                    </section>
                        
                    }
                            

                    <section class="program-continue">
                        <div class="inner-wrapper">
                            <input type="hidden" name="nextPage" value="@Model.ProgramProductsLink" />
                            <a class="program-next" id="progSubmit" href="@Model.ProgramProductsLink"><span>Next</span></a>
                        </div>
                    </section>

                    <div class="clear"></div>

                </div>

            </div>
        }
    </section>

</section>

<div class="program-help-overlay"></div>
<ol id="program-tour" data-joyride>
    <li class="joyride-tip-guide" data-id="joyride-addbtn0" data-button="Next Step">
        <p>This button will add the corresponding beverages to your menu.</p>
    </li>
    <li class="joyride-tip-guide" data-id="joyride-download-recipes" data-button="Next Step">
        <p>Download and reference recipe cards here.</p>
    </li>
    <li class="joyride-tip-guide" data-id="joyride-slider0" data-button="Next Step">
        <p>Move the sliders to adjust ingredient quantities for each beverage.</p>
    </li>
    <li class="joyride-tip-guide" data-id="joyride-slider-output0" data-button="Next Step">
        <p>Manually adjust ingredient quantities if needed.</p>
    </li>
    <li class="joyride-tip-guide" data-id="joyride-marketing0" data-button="Next Step">
        <p>Select desired marketing materials.</p>
    </li>
    <li class="joyride-tip-guide" data-id="progSubmit" data-button="Finished">
        <p>This button will add current quantity fields to your order and bring you to the next step where you can view all program products.</p>
    </li>
</ol>
<ol id="program-tour-tablet" data-joyride>
    <li class="joyride-tip-guide" data-id="joyride-addbtn0" data-options="tipLocation:left;" data-button="Next Step">
        <p>This button will add the corresponding beverages to your menu.</p>
    </li>
    <li class="joyride-tip-guide" data-id="joyride-download-recipes"  data-options="tipLocation:top;" data-button="Next Step">
        <p>Download and reference recipe cards here.</p>
    </li>
    <li class="joyride-tip-guide" data-id="joyride-slider0" data-options="tipLocation:left;" data-button="Next Step">
        <p>Move the sliders to adjust ingredient quantities for each beverage.</p>
    </li>
    <li class="joyride-tip-guide" data-id="joyride-slider-output0" data-options="tipLocation:left;" data-button="Next Step">
        <p>Manually adjust ingredient quantities if needed.</p>
    </li>
    <li class="joyride-tip-guide" data-id="joyride-marketing0" data-options="tipLocation:top;" data-button="Next Step">
        <p>Select desired marketing materials.</p>
    </li>
    <li class="joyride-tip-guide" data-id="progSubmit" data-options="tipLocation:left;" data-button="Finished" class="final-step">
        <p>This button will add current quantity fields to your order and bring you to the next step where you can view all program products.</p>
    </li>
</ol>
<ol id="program-tour-mobile" data-joyride>
    <li class="joyride-tip-guide" data-id="joyride-addbtn0" data-button="Next Step">
        <p>This button will add the corresponding beverages to your menu.</p>
    </li>
    <li class="joyride-tip-guide" data-id="joyride-download-recipes" data-button="Next Step">
        <p>Download and reference recipe cards here.</p>
    </li>
    <li class="joyride-tip-guide" data-id="joyride-slider0" data-button="Next Step">
        <p>Move the sliders to adjust ingredient quantities for each beverage.</p>
    </li>
    <li class="joyride-tip-guide" data-id="joyride-slider-output0" data-options="tipLocation:bottom;" data-button="Next Step">
        <p>Manually adjust ingredient quantities if needed.</p>
    </li>
    <li class="joyride-tip-guide" data-id="joyride-marketing0" data-button="Next Step">
        <p>Select desired marketing materials.</p>
    </li>
    <li class="joyride-tip-guide" data-id="progSubmit" data-options="tipLocation:top;" data-button="Finished" class="final-step">
        <p>This button will add current quantity fields to your order and bring you to the next step where you can view all program products.</p>
    </li>
</ol>
        
@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            SBS.ProgramFunctionality();
            $("#progSubmit, .progSubmit").bind('click touch', function() {
                $("#programForm").submit();
                return false;
                
            });
        });
    </script>
    <script>
        //ie8 checkbox

        $(document).ready(function () {
            $('.checkbox').unbind('click touch').bind('click touch', function () {

                var aunt = $(this).parent().prev('input');

                aunt.toggleClass('checked');

            });

            $(".mkt-select").select2({
                minimumResultsForSearch: -1
            });

            $('#explore-all-sugar-free-flavors .tile-elements h2').replaceWith('<h2>Explore all<br />Sugar-Free flavors</h2>');

        });


   </script>

}